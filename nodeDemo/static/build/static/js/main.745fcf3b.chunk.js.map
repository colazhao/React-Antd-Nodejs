{"version":3,"sources":["pages/home/home.tsx","common/service/http.ts","pages/system/user/edit/edit.tsx","pages/system/user/user.tsx","pages/system/user/content/content.tsx","pages/system/role/edit/edit.tsx","pages/system/role/role.tsx","pages/system/system-router.tsx","pages/system/system.tsx","pages/pages-router.ts","pages/menu/menu.tsx","pages/breadcrumb/breadcrumb.tsx","pages/pages.tsx","App.tsx","serviceWorker.js","index.js"],"names":["Home","Component","constructor","props","super","state","key","onTabChange","type","console","log","this","setState","render","Countdown","deadline","Date","now","contentList","tab1","gutter","span","title","value","format","style","marginTop","tab2","className","fullscreen","onPanelChange","e","autoplay","map","item","width","tabList","tab","activeTabKey","axios","defaults","timeout","baseURL","http","interceptor","handleSucess","url","params","success","res","responseData","data","level","message","error","warning","get","then","catch","dir","post","Edit","formRef","React","roleList","componentWillMount","getRole","editId","getInfo","resp","id","current","setFieldsValue","onFinish","values","getFieldsValue","Object","assign","Promise","resolve","reject","selectRole","Option","labelCol","wrapperCol","ref","name","validateMessages","required","types","email","number","range","Item","label","rules","min","max","onChange","TextArea","User","editVisible","curUser","child","componentDidMount","edit","visible","delete","handleOk","handleCancel","info","forEach","index","push","age","roleName","address","note","operation","marginRight","onClick","onConfirm","okText","cancelText","danger","columns","dataIndex","text","record","to","dataSource","pagination","pageSize","scroll","y","onOk","onCancel","destroyOnClose","UserContent","useParams","Role","routes","path","component","children","System","routerListen","listen","route","pathname","componentWillReceiveProps","nextProps","location","componentWillUnmount","callback","height","exact","user","length","icon","redirect","SubMenu","MenuList","collapsed","currentRouterKey","toggleCollapsed","menuRouter","includes","val","i","defaultSelectedKeys","defaultOpenKeys","mode","theme","inlineCollapsed","AppstoreOutlined","HomeOutlined","withRouter","BreadcrumbComponent","hash","window","split","list","Pages","history","from","Title","App","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.745fcf3b.chunk.js","sourcesContent":["import React,{Component} from 'react';\r\nimport { Carousel } from 'antd';\r\nimport { Card, Statistic, Row, Col,Calendar  } from 'antd';\r\nimport './home.less';\r\nimport LoadingBox from '../../common/components/loadingBox/loadingBox';\r\nclass Home extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(props);\r\n    }\r\n    state = {\r\n        key: 'tab1',\r\n    };\r\n\r\n    onTabChange = (key, type?) => {\r\n        console.log(key, type);\r\n        this.setState({ [type]: key });\r\n    };\r\n\r\n    render() {\r\n        let arr = [1,2,3,4,5];\r\n        const tabList = [\r\n            {\r\n                key: 'tab1',\r\n                tab: '统计',\r\n            },\r\n            {\r\n                key: 'tab2',\r\n                tab: '日历',\r\n            },\r\n        ];\r\n        const { Countdown } = Statistic;\r\n        const deadline = Date.now() + 1000 * 60 * 60 * 24 * 2 + 1000 * 30; // Moment is also OK\r\n\r\n        const contentList = {\r\n            tab1: <div>\r\n                <Row gutter={16}>\r\n                    <Col span={12}>\r\n                        <Countdown title=\"Countdown\" value={deadline} />\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Countdown title=\"Million Seconds\" value={deadline} format=\"HH:mm:ss:SSS\" />\r\n                    </Col>\r\n                    <Col span={24} style={{ marginTop: 32 }}>\r\n                        <Countdown title=\"Day Level\" value={deadline} format=\"D 天 H 时 m 分 s 秒\" />\r\n                    </Col>\r\n                </Row>\r\n            </div>,\r\n            tab2: <div>\r\n                <div className=\"site-calendar-demo-card\">\r\n                    <Calendar fullscreen={false} onPanelChange={e=>{console.log('site')}} />\r\n                </div>\r\n            </div>,\r\n        };\r\n        return (\r\n            <div className=\"home\">\r\n                <section className=\"banner\">\r\n                    <Carousel autoplay>\r\n                        {\r\n                            arr.map((item,key)=>{\r\n                                return <div key={key}>{item}</div>\r\n                            })\r\n                        }\r\n                    </Carousel>\r\n                </section>\r\n\r\n                <section className=\"\">\r\n                    <Card\r\n                        style={{ width: '100%' }}\r\n                        title=\"Card标题\"\r\n                        tabList={tabList}\r\n                        activeTabKey={this.state.key}\r\n                        onTabChange={key => {\r\n                            this.onTabChange(key,'key');\r\n                        }}\r\n                    >\r\n                        {contentList[this.state.key]}\r\n                    </Card>\r\n                </section>\r\n            </div>\r\n        );\r\n    };\r\n};\r\nexport default Home;\r\n\r\n","import axios from 'axios';\r\nimport {message, Space} from 'antd';\r\n\r\naxios.defaults.timeout = 10000;  // 超时时间  10s\r\naxios.defaults.baseURL = 'http://192.190.10.136:3001/';\r\nconst MethodType = {\r\n    get: 'get',\r\n    post: 'post',\r\n    put: 'put',\r\n    delete: 'delete',\r\n    patch: 'patch'\r\n};\r\n/**\r\n * 模块说明:有api_token的请求\r\n */\r\nconst http = {\r\n    interceptor: () => {\r\n        const apiToken = '************';\r\n        let headers = {\r\n            'X-Requested-With': 'XMLHttpRequest',\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${apiToken}`,\r\n        }\r\n        return headers;\r\n    },\r\n    handleSucess: (url, params, success: Function, res) => {\r\n        let responseData = res.data;\r\n        switch (responseData.level) {\r\n            case 'data':\r\n                success(responseData.data);\r\n                break;\r\n            case 'alert':\r\n                success(responseData.data);\r\n                message.success(responseData.message);\r\n                break;\r\n            case 'error':\r\n                message.error(responseData.message);\r\n                break;\r\n            case 'warning':\r\n                message.warning(responseData.message);\r\n                break;\r\n        }\r\n    },\r\n    get: (url, params, success: Function) => {\r\n        axios.get(url, params).then((res) => {\r\n            http.handleSucess(url, params, success, res);\r\n        }).catch((error) => {\r\n            console.dir(error);\r\n        });\r\n    },\r\n    post: (url, params, success: Function) => {\r\n        axios.post(url, params).then((res) => {\r\n            http.handleSucess(url, params, success, res);\r\n        }).catch((error) => {\r\n            console.dir(error);\r\n        });\r\n        // return new Promise((resolve, reject) => {\r\n        //\r\n        // })\r\n    },\r\n\r\n//         axios({\r\n//                   url: url,\r\n//                   'get',\r\n//                   params: params,\r\n//                   headers: this.interceptor(),\r\n//     })\r\n};\r\nexport default http;\r\n\r\n\r\n","import * as React from \"react\";\r\nimport {Component} from 'react';\r\nimport './edit.less';\r\nimport {Modal, Button, Form, Input, InputNumber, Select} from 'antd';\r\nimport http from '../../../../common/service/http';\r\nimport { FormInstance } from 'antd/lib/form';\r\n\r\ninterface Props {\r\n    editId: String,\r\n}\r\n\r\nclass Edit extends Component<Props, any> {\r\n    formRef = React.createRef<FormInstance>();\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n            roleList: []\r\n        }\r\n    }\r\n    componentWillMount() {\r\n        this.getRole();\r\n        if(this.props.editId){\r\n            this.getInfo(this.props.editId);\r\n        }\r\n    }\r\n    getRole(){\r\n        http.get(`role/list`, '',resp=>{\r\n            this.setState({roleList: resp});\r\n        });\r\n    }\r\n    getInfo(id){\r\n        http.get(`user/get/${id}`, '',resp=>{\r\n            console.log(resp);\r\n            this.formRef.current.setFieldsValue(resp);\r\n        });\r\n    }\r\n    onFinish(values?){\r\n        console.log(values);\r\n        let params = this.formRef.current.getFieldsValue();\r\n        this.props.editId && Object.assign(params, {id: this.props.editId});\r\n        let url = this.props.editId? 'update': 'add';\r\n        return new Promise((resolve, reject) => {\r\n            http.post('user/'+url, params, resp=>{\r\n                resolve(true);\r\n            })\r\n        });\r\n    };\r\n    selectRole(e){\r\n        console.log(e);\r\n    }\r\n\r\n    render() {\r\n        const layout = {\r\n            labelCol: {span: 4},\r\n            wrapperCol: {span: 20},\r\n        };\r\n        const validateMessages = {\r\n            required: '${label} is required!',\r\n            types: {\r\n                email: '${label} is not validate email!',\r\n                number: '${label} is not a validate number!',\r\n            },\r\n            number: {\r\n                range: '${label} must be between ${min} and ${max}',\r\n            },\r\n        };\r\n        const { Option } = Select;\r\n        return (\r\n            <>\r\n                <Form {...layout} ref={this.formRef} name=\"nest-messages\" onFinish={(e)=>this.onFinish(e)} validateMessages={validateMessages}>\r\n                    <Form.Item name=\"name\" label=\"用户名\" rules={[{required: true}]}>\r\n                        <Input/>\r\n                    </Form.Item>\r\n                    <Form.Item name=\"email\" label=\"邮箱\" rules={[{type: 'email'}]}>\r\n                        <Input/>\r\n                    </Form.Item>\r\n                    <Form.Item name=\"age\" label=\"年龄\" rules={[{type: 'number', min: 0, max: 99}]}>\r\n                        <InputNumber/>\r\n                    </Form.Item>\r\n                    <Form.Item name=\"address\" label=\"地址\">\r\n                        <Input/>\r\n                    </Form.Item>\r\n                    <Form.Item name=\"roleId\" label=\"角色\">\r\n                        <Select onChange={(e)=>this.selectRole(e)}>\r\n                            {\r\n                                this.state.roleList.map((item,key)=>{\r\n                                    return <Option value={item.id} key={key}>{item.name}</Option>\r\n                                })\r\n                            }\r\n                        </Select>\r\n                    </Form.Item>\r\n                    <Form.Item name=\"note\" label=\"备注\">\r\n                        <Input.TextArea/>\r\n                    </Form.Item>\r\n                    {/*<Form.Item wrapperCol={{...layout.wrapperCol, offset: 10}}>*/}\r\n                    {/*    <Button type=\"primary\" htmlType=\"submit\">*/}\r\n                    {/*        Submit*/}\r\n                    {/*    </Button>*/}\r\n                    {/*</Form.Item>*/}\r\n                </Form>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Edit;\r\n","import * as React from \"react\";\r\nimport {Component, useState} from 'react';\r\nimport {\r\n    HashRouter as Router, Link,\r\n    Route, Switch,\r\n} from 'react-router-dom';\r\nimport './user.less';\r\nimport {Table, Modal, Button, Popconfirm} from 'antd';\r\nimport http from '../../../common/service/http';\r\nimport UserDetail from \"./detail/detail\";\r\nimport UserEdit from './edit/edit';\r\n\r\n// interface Props {\r\n//     value: Object;\r\n// }\r\n\r\nclass User extends Component {\r\n    state = {\r\n        editVisible: false,\r\n        editId: '',\r\n        title: '',\r\n        data: []\r\n    };\r\n    curUser;\r\n    child;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    componentWillMount() {\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getInfo();\r\n    }\r\n\r\n    //新建--编辑\r\n    edit(id?) {\r\n        let visible = this.state.editVisible;\r\n        this.setState({\r\n            editId: id ? id : '',\r\n            title: id ? '编辑用户' : '新建用户',\r\n            editVisible: !visible,\r\n        });\r\n    };\r\n\r\n    //删除\r\n    delete(id?) {\r\n        http.post(`user/delete/${id}`, '', resp => {\r\n            this.getInfo();\r\n        });\r\n    }\r\n\r\n    handleOk(e) {\r\n        this.child.onFinish().then(data => {\r\n            data && this.handleCancel(e);\r\n            this.getInfo();\r\n        });\r\n    };\r\n\r\n    handleCancel(e) {\r\n        this.setState({\r\n            editVisible: false,\r\n        });\r\n    };\r\n\r\n    getInfo() {\r\n        // let resp = await http.get('user/list', '') || [], info = [];\r\n        // for (let i = 0; i < resp['length']; i++) {\r\n        // }\r\n        http.get('user/list', '', resp => {\r\n            let info = [];\r\n            resp.forEach((item, index) => {\r\n                info.push({\r\n                    key: index,\r\n                    id: item.id,\r\n                    name: item.name,\r\n                    age: item.age,\r\n                    email: item.email,\r\n                    roleName: item.roleName,\r\n                    address: item.address,\r\n                    note: item.note,\r\n                    operation:\r\n                        <div>\r\n                            <Button type=\"primary\" style={{marginRight: '5px'}}\r\n                                    onClick={() => this.edit(item.id)}>编辑</Button>\r\n                            {/*<Button type=\"primary\" onClick={() => this.delete(item.id)}>删除</Button>*/}\r\n                            <Popconfirm\r\n                                title={'是否删除'+item.name+'?'}\r\n                                onConfirm={()=>this.delete(item.id)}\r\n                                okText=\"确定\" cancelText=\"取消\"\r\n                            >\r\n                                <Button type=\"primary\" danger>删除</Button>\r\n                            </Popconfirm>\r\n                        </div>\r\n                });\r\n            });\r\n            this.setState({data: info});\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n        // useState会返回两个，一个是当前值。一个是改变它的函数\r\n        // let [state,setState] = useState({visible: false});\r\n        const columns = [\r\n            {\r\n                title: '用户名',\r\n                dataIndex: 'name',\r\n                width: 150,\r\n                render: (text, record, index) => <Link to={`/pages/system/user/content/${record.key}`}>{text}</Link>,\r\n            },\r\n            {\r\n                title: '年龄',\r\n                dataIndex: 'age',\r\n                width: 150,\r\n            },\r\n            {\r\n                title: '所属角色',\r\n                dataIndex: 'roleName',\r\n                width: 150,\r\n            },\r\n            {\r\n                title: '地址',\r\n                dataIndex: 'address',\r\n            },\r\n            {\r\n                title: '邮箱',\r\n                dataIndex: 'email',\r\n            },\r\n            {\r\n                title: '备注',\r\n                dataIndex: 'note',\r\n            },\r\n            {\r\n                title: '操作',\r\n                dataIndex: 'operation',\r\n                width: '300px'\r\n            },\r\n        ];\r\n\r\n        return (\r\n            <div className=\"user\">\r\n                <div className=\"buttons\">\r\n                    <Button type=\"primary\" style={{marginRight: '5px'}} onClick={() => this.edit()}>新建</Button>\r\n                </div>\r\n                <div className={'user-table'} style={{'width': this.curUser ? '70%' : '100%'}}>\r\n                    <Table columns={columns} dataSource={this.state.data} pagination={{pageSize: 50}}\r\n                           scroll={{y: 600}}/>\r\n                </div>\r\n                <Modal\r\n                    title={this.state.title}\r\n                    visible={this.state.editVisible}\r\n                    // footer={null}\r\n                    onOk={(e) => this.handleOk(e)}\r\n                    onCancel={(e) => this.handleCancel(e)}\r\n                    okText={\"提交\"}\r\n                    cancelText={\"取消\"}\r\n                    destroyOnClose\r\n                >\r\n                    <UserEdit editId={this.state.editId} ref={e => {\r\n                        this.child = e\r\n                    }}>\r\n                    </UserEdit>\r\n                </Modal>\r\n                {/*<div className={'user-detail'}>*/}\r\n                {/*    {*/}\r\n                {/*        this.curUser && <UserDetail value={this.curUser} callback={this.callback.bind(this)}/>*/}\r\n                {/*    }*/}\r\n                {/*</div>*/}\r\n            </div>\r\n        );\r\n    };\r\n};\r\nexport default User;\r\n","import {Component} from 'react';\r\nimport './content.less';\r\nimport * as React from \"react\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    useParams\r\n} from \"react-router-dom\";\r\nimport { Table } from 'antd';\r\nimport { Modal, Button } from 'antd';\r\ninterface Props {\r\n    value: {\r\n        name: String,\r\n        age: Number,\r\n        address:String,\r\n    };\r\n}\r\nclass UserContent extends Component<Props>{\r\n    params = useParams;\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render(){\r\n        return (\r\n            <div className=\"user-content\">\r\n                {this.props.value.name}\r\n                {this.params}\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default UserContent;\r\n","import * as React from \"react\";\r\nimport {Component} from 'react';\r\nimport './edit.less';\r\nimport {Modal, Button, Form, Input, InputNumber, Select} from 'antd';\r\nimport http from '../../../../common/service/http';\r\nimport { FormInstance } from 'antd/lib/form';\r\n\r\ninterface Props {\r\n    editId: String,\r\n}\r\n\r\nclass Edit extends Component<Props> {\r\n    formRef = React.createRef<FormInstance>();\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {}\r\n        if(props.editId){\r\n            this.getInfo(props.editId);\r\n        }\r\n    }\r\n    getInfo(id){\r\n        http.get(`role/get/${id}`, '',resp=>{\r\n            this.formRef.current.setFieldsValue(resp);\r\n        });\r\n    }\r\n    onFinish(values?){\r\n        let params = this.formRef.current.getFieldsValue();\r\n        this.props.editId && Object.assign(params, {id: this.props.editId});\r\n        let url = this.props.editId? 'update': 'add';\r\n        return new Promise((resolve, reject) => {\r\n            http.post('role/'+url, params, resp=>{\r\n                resolve(true);\r\n            })\r\n        });\r\n    };\r\n    render() {\r\n        const layout = {\r\n            labelCol: {span: 4},\r\n            wrapperCol: {span: 20},\r\n        };\r\n        const validateMessages = {\r\n            required: '${label} is required!',\r\n        };\r\n        const { Option } = Select;\r\n        return (\r\n            <>\r\n                <Form {...layout} ref={this.formRef} name=\"nest-messages\" onFinish={(e)=>this.onFinish(e)} validateMessages={validateMessages}>\r\n                    <Form.Item name=\"name\" label=\"角色名\" rules={[{required: true}]}>\r\n                        <Input/>\r\n                    </Form.Item>\r\n                    <Form.Item name=\"note\" label=\"备注\">\r\n                        <Input.TextArea/>\r\n                    </Form.Item>\r\n                </Form>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Edit;\r\n","import * as React from \"react\";\r\nimport {Component, useState} from 'react';\r\nimport {\r\n    HashRouter as Router, Link,\r\n    Route, Switch,\r\n} from 'react-router-dom';\r\nimport './role.less';\r\nimport {Table, Modal, Button, Popconfirm} from 'antd';\r\nimport http from '../../../common/service/http';\r\nimport RoleEdit from './edit/edit';\r\n\r\nclass Role extends Component {\r\n    state = {\r\n        editVisible: false,\r\n        editId: '',\r\n        title: '',\r\n        data: []\r\n    };\r\n    child;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    componentWillMount() {\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getInfo();\r\n    }\r\n    getInfo() {\r\n        http.get('role/list', '', resp => {\r\n            let info = [];\r\n            resp.forEach((item, index) => {\r\n                info.push({\r\n                    key: index,\r\n                    id: item.id,\r\n                    name: item.name,\r\n                    note: item.note,\r\n                    operation:\r\n                        <div>\r\n                            <Button type=\"primary\" style={{marginRight: '5px'}}\r\n                                    onClick={() => this.edit(item.id)}>编辑</Button>\r\n                            <Popconfirm\r\n                                title={'是否删除'+item.name+'?'}\r\n                                onConfirm={()=>this.delete(item.id)}\r\n                                okText=\"确定\" cancelText=\"取消\"\r\n                            >\r\n                                <Button type=\"primary\" danger>删除</Button>\r\n                            </Popconfirm>\r\n                        </div>\r\n                });\r\n            });\r\n            this.setState({data: info});\r\n        });\r\n    }\r\n\r\n    //新建--编辑\r\n    edit(id?) {\r\n        let visible = this.state.editVisible;\r\n        this.setState({\r\n            editId: id ? id : '',\r\n            title: id ? '编辑角色' : '新建角色',\r\n            editVisible: !visible,\r\n        });\r\n    };\r\n\r\n    //删除\r\n    delete(id?) {\r\n        http.post(`role/delete/${id}`, '', resp => {\r\n            this.getInfo();\r\n        });\r\n    }\r\n\r\n    handleOk(e) {\r\n        this.child.onFinish().then(data => {\r\n            data && this.handleCancel(e);\r\n            this.getInfo();\r\n        });\r\n    };\r\n\r\n    handleCancel(e) {\r\n        this.setState({\r\n            editVisible: false,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        // useState会返回两个，一个是当前值。一个是改变它的函数\r\n        // let [state,setState] = useState({visible: false});\r\n        const columns = [\r\n            {\r\n                title: '角色名称',\r\n                dataIndex: 'name',\r\n                width: 150,\r\n            },\r\n            {\r\n                title: '备注',\r\n                dataIndex: 'note',\r\n            },\r\n            {\r\n                title: '操作',\r\n                dataIndex: 'operation',\r\n                width: '300px'\r\n            },\r\n        ];\r\n\r\n        return (\r\n            <div className=\"role\">\r\n                <div className=\"buttons\">\r\n                    <Button type=\"primary\"  onClick={() => this.edit()}>新建</Button>\r\n                </div>\r\n                <div className={'role-table'} >\r\n                    <Table columns={columns} dataSource={this.state.data} pagination={{pageSize: 50}}\r\n                           scroll={{y: 600}}/>\r\n                </div>\r\n                <Modal\r\n                    title={this.state.title}\r\n                    visible={this.state.editVisible}\r\n                    // footer={null}\r\n                    onOk={(e) => this.handleOk(e)}\r\n                    onCancel={(e) => this.handleCancel(e)}\r\n                    okText={\"提交\"}\r\n                    cancelText={\"取消\"}\r\n                    destroyOnClose\r\n                >\r\n                    <RoleEdit editId={this.state.editId} ref={e => {\r\n                        this.child = e\r\n                    }}>\r\n                    </RoleEdit>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    };\r\n};\r\nexport default Role;\r\n","\r\nimport User from './user/user';\r\nimport UserContent from './user/content/content';\r\nimport Role from './role/role';\r\nlet routes=[\r\n    {\r\n        name: 'User',\r\n        path:\"/pages/system/user\",\r\n        component:User,\r\n        children:[\r\n            {\r\n                name: 'User',\r\n                path: \"/pages/system/user/content/:id\",\r\n                component: UserContent,\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        name: 'Role',\r\n        path:\"/pages/system/role\",\r\n        component:Role,\r\n    },\r\n];\r\nexport default routes;\r\n","import {Component} from 'react';\r\nimport * as React from \"react\";\r\nimport {\r\n    HashRouter as Router,\r\n    Route, Switch\r\n} from 'react-router-dom';\r\nimport user from './user/user';\r\nimport role from './role/role';\r\nimport UserContent from \"./user/content/content\";\r\nimport routes from './system-router';\r\n\r\nclass System extends Component {\r\n    routerListen;\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(this.props);\r\n    }\r\n\r\n    //只会在装载之前调用一次，在 render 之前调用，\r\n    componentWillMount() {\r\n        this.props['history'].listen(route => {\r\n            if (route.pathname) {\r\n                this.setState({pathname: route.pathname});\r\n            }\r\n        })\r\n        this.props['history'].push(this.props['location'].pathname);\r\n    }\r\n\r\n    // 组件挂载,只会在装载完成之后调用一次\r\n    componentDidMount() {\r\n        console.log(this.props['location']);\r\n    }\r\n    //更新\r\n    componentWillReceiveProps(nextProps) {\r\n        console.log(this.props['location']);\r\n        console.log(nextProps);\r\n        if(this.props['location'].pathname != nextProps.location.pathname){\r\n            this.setState({pathname: nextProps.location.pathname});\r\n        }\r\n    }\r\n    //组件卸载\r\n    componentWillUnmount() {\r\n        this.setState = (state, callback) => {\r\n            return;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"system\" style={{height: '100%'}} key={this.props['location'].key}>\r\n                <Router>\r\n                    <Switch>\r\n                        <Route exact path='/' component={user}/>\r\n                        {/*<Route path='/pages/system/user' component={user}/>*/}\r\n                        {/*<Route path='/pages/system/role' component={role}/>*/}\r\n                        {/*<Route path='/pages/system/user/content/:id' component={UserContent}/>*/}\r\n                        {\r\n                            routes.map((item, key) => {\r\n                                if (item.children && item.children.length) {\r\n                                    return <Route key={key} path={item.path} component={item.component}/>\r\n                                } else {\r\n                                    return <Route key={key} path={item.path} component={item.component}/>\r\n                                }\r\n                            })\r\n                        }\r\n                    </Switch>\r\n                </Router>\r\n            </div>\r\n        );\r\n    };\r\n};\r\nexport default System;\r\n","import Home from './home/home';\r\nimport System from './system/system';\r\nimport User from './system/user/user';\r\nimport Role from './system/role/role';\r\nimport UserContent from './system/user/content/content';\r\nimport {\r\n    AppstoreOutlined,\r\n    MenuUnfoldOutlined,\r\n    MenuFoldOutlined,\r\n    PieChartOutlined,\r\n    DesktopOutlined,\r\n    ContainerOutlined,\r\n    MailOutlined,\r\n} from '@ant-design/icons';\r\n\r\nlet routes=[\r\n    {\r\n        name: '首页',\r\n        path:\"/pages/home\",\r\n        component:Home,\r\n        icon: 'DesktopOutlined',\r\n        exact:true\r\n    },\r\n    {\r\n        name: '系统管理',\r\n        path: \"/pages/system\",\r\n        component: System,\r\n        icon: 'AppstoreOutlined',\r\n        children:[\r\n            {\r\n                name: '用户管理',\r\n                path:\"/pages/system/user\",\r\n                component:User,\r\n                children:[\r\n                    {\r\n                        name: '用户详情',\r\n                        path: \"/pages/system/user/content/:id\",\r\n                        component: UserContent,\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                name: '角色管理',\r\n                path:\"/pages/system/role\",\r\n                component:Role,\r\n                children:[]\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        name: '首页',\r\n        path:\"/\",\r\n        redirect: '/pages/home',\r\n    },\r\n]\r\nexport default routes;\r\n","import {Component} from 'react';\r\nimport * as React from \"react\";\r\nimport {\r\n    HashRouter as Router,\r\n    Route, Link\r\n} from 'react-router-dom';\r\nimport './menu.less';\r\nimport {Menu, Button} from 'antd';\r\nimport Icon from '@ant-design/icons';\r\nimport {\r\n    AppstoreOutlined,\r\n    HomeOutlined,\r\n    MenuUnfoldOutlined,\r\n    MenuFoldOutlined,\r\n    PieChartOutlined,\r\n    DesktopOutlined,\r\n    ContainerOutlined,\r\n    MailOutlined,\r\n} from '@ant-design/icons';\r\nimport menuRouter from '../pages-router';\r\n// import PropTypes from 'prop-types';\r\nimport {withRouter} from 'react-router-dom'\r\n\r\nconst {SubMenu} = Menu;\r\n\r\nclass MenuList extends Component {\r\n    state = {\r\n        collapsed: false,\r\n        currentRouterKey: ''\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.location();\r\n    }\r\n\r\n    location() {\r\n        menuRouter.forEach((item, index) => {\r\n            if (!item.redirect) {\r\n                if (this.props['location'].pathname.includes(item.path)) {\r\n                    if (item.children && item.children.length) {\r\n                        item.children.forEach((val, i) => {\r\n                            if (this.props['location'].pathname.includes(val.path)) {\r\n                                this.state.currentRouterKey = 'c' + i;\r\n                            } else {\r\n                                this.state.currentRouterKey = 'c' + 0;\r\n                            }\r\n                        })\r\n                    } else {\r\n                        this.state.currentRouterKey = index + '';\r\n                    }\r\n                } else if (this.props['location'].pathname == '/' || !this.props['location'].pathname) {\r\n                    this.state.currentRouterKey = '0';\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.props['history'].listen(route => {\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    toggleCollapsed = () => {\r\n        this.setState({\r\n            collapsed: !this.state.collapsed,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"menu-list\">\r\n                {/*<Button type=\"primary\" onClick={this.toggleCollapsed} style={{marginBottom: 16}}>*/}\r\n                {/*    {React.createElement(this.state.collapsed ? MenuUnfoldOutlined : MenuFoldOutlined)}*/}\r\n                {/*</Button>*/}\r\n                <Menu\r\n                    defaultSelectedKeys={[this.state.currentRouterKey]}\r\n                    defaultOpenKeys={['1']}\r\n                    mode=\"inline\"\r\n                    theme=\"dark\"\r\n                    inlineCollapsed={this.state.collapsed}\r\n                >\r\n                    {\r\n                        menuRouter.map((item, key) => {\r\n                            if (!item.redirect) {\r\n                                if (item.children && item.children.length) {\r\n                                    return <SubMenu key={key} title={\r\n                                                <span>\r\n                                                    <AppstoreOutlined/>\r\n                                                    <span>{item.name}</span>\r\n                                                </span>}>\r\n                                                {\r\n                                                item.children.map((val, index) => {\r\n                                                    return <Menu.Item key={'c' + index}>\r\n                                                            <Link to={val.path}><span>{val.name}</span></Link>\r\n                                                            </Menu.Item>\r\n                                                    })\r\n                                                }\r\n                                            </SubMenu>\r\n                                } else {\r\n                                    return <Menu.Item key={key} title=\"\">\r\n                                        <Link to={item.path}>\r\n                                            <span><HomeOutlined />{item.name}</span>\r\n                                        </Link>\r\n                                    </Menu.Item>\r\n                                }\r\n                            }\r\n                        })\r\n                    }\r\n                    {/*<SubMenu key=\"sub1\" title={ <span> <MailOutlined/> <span>Navigation One</span> </span> }>*/}\r\n                    {/*    <Menu.Item key=\"5\">Option 5</Menu.Item>*/}\r\n                    {/*    <Menu.Item key=\"6\">Option 6</Menu.Item>*/}\r\n                    {/*    <Menu.Item key=\"7\">Option 7</Menu.Item>*/}\r\n                    {/*    <Menu.Item key=\"8\">Option 8</Menu.Item>*/}\r\n                    {/*</SubMenu>*/}\r\n                    {/*<SubMenu key=\"sub2\" title={ <span> <MailOutlined/> <span>Navigation Two</span> </span>}>*/}\r\n                    {/*    <Menu.Item key=\"9\">Option 9</Menu.Item>*/}\r\n                    {/*    <Menu.Item key=\"10\">Option 10</Menu.Item>*/}\r\n                    {/*    <SubMenu key=\"sub3\" title=\"Submenu\">*/}\r\n                    {/*        <Menu.Item key=\"11\">Option 11</Menu.Item>*/}\r\n                    {/*        <Menu.Item key=\"12\">Option 12</Menu.Item>*/}\r\n                    {/*    </SubMenu>*/}\r\n                    {/*</SubMenu>*/}\r\n                </Menu>\r\n            </div>\r\n        );\r\n    }\r\n};\r\nexport default withRouter(MenuList);\r\n","import {Component} from 'react';\r\nimport './breadcrumb.less';\r\nimport * as React from \"react\";\r\nimport { Breadcrumb } from 'antd';\r\nimport {\r\n    HashRouter as Router, Link,\r\n    Route, Switch,\r\n} from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { withRouter } from 'react-router';\r\nclass BreadcrumbComponent extends Component{\r\n    static propTypes = {\r\n        match: PropTypes.object.isRequired,\r\n        location: PropTypes.object.isRequired,\r\n        history: PropTypes.object.isRequired\r\n    }\r\n    state = {\r\n        hash: window.location.hash.includes('#/pages/')? window.location.hash.split('#/pages/')[1]:'/'\r\n    }\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    componentWillMount() {\r\n        this.props['history'].listen(route => {\r\n            if(route.pathname){\r\n                this.setState({hash: route.pathname})\r\n            }\r\n        })\r\n    }\r\n    render() {\r\n        let list = this.state.hash.split('/');\r\n        // const { match, location, history } = this.props;\r\n        return (\r\n        <Breadcrumb>\r\n                {\r\n                    list.map((item, key)=>{\r\n                        return <Breadcrumb.Item key={key}>\r\n                            <Link to={this.state.hash}>{item}</Link>\r\n                        </Breadcrumb.Item>\r\n                    })\r\n                }\r\n            </Breadcrumb>\r\n        );\r\n    };\r\n};\r\nexport default withRouter(BreadcrumbComponent);\r\n","import {Component} from 'react';\r\nimport * as React from \"react\";\r\nimport {\r\n    HashRouter as Router, Link,\r\n    Route, Switch, Redirect\r\n} from 'react-router-dom';\r\nimport './pages.less';\r\nimport Home from './home/home';\r\nimport System from \"./system/system\";\r\nimport MenuList from './menu/menu';\r\nimport BreadcrumbComponent from './breadcrumb/breadcrumb';\r\n\r\nimport routes from './pages-router';\r\n\r\nclass Pages extends Component<{}, any> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hash: window.location.hash.split('#')[1],\r\n        };\r\n        props.history.push(this.state.hash);\r\n        console.log(props);\r\n        console.log(this.state);\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"main\">\r\n                <nav className=\"title\">REACT</nav>\r\n                <div className=\"pages\">\r\n                    <div className=\"menu\">\r\n                        <MenuList/>\r\n                    </div>\r\n                    {/*routes={route.routes}*/}\r\n                    <div className=\"breadcrumb\">\r\n                        <BreadcrumbComponent/>\r\n                    </div>\r\n                    <div className=\"content\">\r\n                        <Router>\r\n                            <Switch>\r\n                                {\r\n                                    routes.map((route, key) => {\r\n                                        if (route.exact) {\r\n                                            return <Route key={key} exact path={route.path}\r\n                                                          render={props => (\r\n                                                              <route.component {...props}  />\r\n                                                          )}\r\n                                            />;\r\n                                        } else if (route.redirect) {\r\n                                            return <Redirect key={key} from={\"/*\"} to={route.redirect}/>\r\n                                        } else {\r\n                                            return <Route key={key} path={route.path}\r\n                                                          render={props => (\r\n                                                              <route.component {...props}  />\r\n                                                          )}\r\n                                            />\r\n                                        }\r\n                                    })\r\n                                }\r\n                            </Switch>\r\n                        </Router>\r\n                        {/*<Switch>*/}\r\n                        {/*    <Route exact path='/' component={Home}/>*/}\r\n                        {/*    <Route path='/pages/system' component={System}/>*/}\r\n                        {/*    <Route path='/pages/home' component={Home}/>*/}\r\n                        {/*</Switch>*/}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n};\r\nexport default Pages;\r\n","import {Component} from 'react';\nimport * as React from \"react\";\nimport {Form, Select, InputNumber, DatePicker, Switch, Slider, Button, Typography} from 'antd';\nimport './App.less';\nimport {\n    HashRouter as Router,\n    Route,\n    Redirect\n} from 'react-router-dom';\nimport Pages from \"./pages/pages\";\n\nconst {Option} = Select;\nconst {Title} = Typography;\n\n// const App = () => (\n//   <>\n//     <section style={{ textAlign: 'center', marginTop: 48, marginBottom: 60 }}>\n//       <Title level={2}>\n//         <img\n//           style={{width: 40, height: 40, marginRight: 12, verticalAlign: 'bottom' }}\n//           src=\"https://gw.alipayobjects.com/zos/rmsportal/KDpgvguMpGfqaHPjicRK.svg\"\n//           alt=\"Ant Design\"\n//         />\n//         Ant Design\n//       </Title>\n//     </section>\n//     <Form labelCol={{ span: 8 }} wrapperCol={{ span: 8 }}>\n//       <Form.Item label=\"数字输入框\">\n//         <InputNumber min={1} max={10} defaultValue={3} />\n//         <span className=\"ant-form-text\"> 台机器</span>\n//         <a href=\"https://ant.design\">链接文字</a>\n//       </Form.Item>\n//       <Form.Item label=\"开关\">\n//         <Switch defaultChecked />\n//       </Form.Item>\n//       <Form.Item label=\"滑动输入条\">\n//         <Slider defaultValue={70} />\n//       </Form.Item>\n//       <Form.Item label=\"选择器\">\n//         <Select defaultValue=\"lucy\" style={{ width: 192 }}>\n//           <Option value=\"jack\">jack</Option>\n//           <Option value=\"lucy\">lucy</Option>\n//           <Option value=\"disabled\" disabled>disabled</Option>\n//           <Option value=\"yiminghe\">yiminghe</Option>\n//         </Select>\n//       </Form.Item>\n//       <Form.Item label=\"日期选择框\">\n//         <DatePicker />\n//       </Form.Item>\n//\n//       <Form.Item wrapperCol={{ span: 8, offset: 8 }}>\n//         <Button type=\"primary\" htmlType=\"submit\">\n//           Submit\n//         </Button>\n//         <Button style={{ marginLeft: 8 }}>\n//           Cancel\n//         </Button>\n//       </Form.Item>\n//     </Form>\n//   </>\n// );\nclass App extends Component {\n    state = {\n        hash: window.location.hash.split('#')[1],\n    };\n\n    constructor(props) {\n        super(props);\n        console.log(props);\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <Router>\n                    <Route exact path='/' component={Pages}/>\n                    <Route path='/pages' component={Pages}/>\n                </Router>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.less';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}